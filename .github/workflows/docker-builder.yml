on:
  workflow_call:
    inputs:
      WORKDIR:
        description: "The directory in which the devcontainer configuration is located."
        type: string
        required: true
      IMAGE_NAME:
        description: "The name of the image to build."
        type: string
        required: true
env:
  WORKDIR: ${{ inputs.WORKDIR }}
jobs:
  matrix:
    runs-on: ubuntu-latest

    name: 'Matrix'

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Set up Deno'
        uses: denoland/setup-deno@v2
        with:
          deno-version: v1.x

      - name: 'Load configurations'
        id: configurations
        run: >
          echo "configurations=$(
          deno run
          --allow-read
          --allow-env
          ./scripts/configuration.ts
          )" >> $GITHUB_OUTPUT

      - name: 'Check configurations'
        if: steps.configurations.outputs.configurations == ''
        run: exit 1

    outputs:
      configurations: ${{ steps.configurations.outputs.configurations }}

  dockerfile:
    needs: matrix

    runs-on: ubuntu-latest

    name: 'Dockerfile.${{ matrix.configuration }}'

    strategy:
      fail-fast: false
      matrix:
        configuration: ${{ fromJson(needs.matrix.outputs.configurations) }}

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Set up Deno'
        uses: denoland/setup-deno@v2
        with:
          deno-version: v1.x

      - name: 'Generate Dockerfile'
        run: > 
          deno run
          --allow-read
          --allow-write
          --allow-env 
          ./scripts/generate.ts ${{ matrix.configuration }}

      - name: 'Upload Dockerfile'
        uses: actions/upload-artifact@v4
        with:
          name: Dockerfile.${{ matrix.configuration }}
          path: Dockerfile.${{ matrix.configuration }}
          if-no-files-found: error

      - name: 'Set up Docker QEMU'
        uses: docker/setup-qemu-action@v3

      - name: 'Setup Docker buildx'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Extract Docker metadata'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: lordchunk/${{ inputs.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.configuration }}

      - name: Build and push
        uses: docker/build-push-action@v6.15.0
        with:
          platforms: linux/arm64,linux/amd64
          context: .
          file: Dockerfile.${{ matrix.configuration }}
          push: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
          tags: ghcr.io/${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Use GitHub Actions cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
      